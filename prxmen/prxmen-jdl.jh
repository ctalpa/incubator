
entity CompanyVehicles {
	companyVehiclesId Long,
	numberPlate String,
    vendorVehicle String,
    modelVehicles String,
    insuranceExpirationDate ZonedDateTime,
}

entity Customer {
	custumerId Long,
    businessName String,
    name String,
    surname String,
    description String,
    customerType CustomerType,
    piva String,
    fiscalCode String,
}

entity Vendor {
	vendorId Long,
    businessName String,
    description String,
    piva String,
}

entity Contact{
	contactType ContactType,
    contact String
}

entity Location {
	locationId Long,
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String,
    regionName String,
    countryName String,
}


/**
 * The Employee entity.
 */
entity Employee {
	employeeId Long,
	firstName String required,
	lastName String required,
	email String,
    phone String,
    businessPhone String,
    phiscalcode String,
    birthDay ZonedDateTime,
	hireDate ZonedDateTime,
}

entity RestWorkDays {
	restWorkDaysStatus RestWorkDaysStatus,
    description String,
}

entity DayOff {
	dayId Long,
    dayOffType DayOffType,
    description String,
    startDate ZonedDateTime,
    endDate ZonedDateTime,
}


entity Job {
	description String,
}

entity Task {
	taskId Long,
	title String required,
	description String,
    taskDate ZonedDateTime,
    taskStatus TaskStatus,
    taskPriority TaskPriority,
    taskType TaskType,
}


entity JobHistory {
	startDate ZonedDateTime,
	endDate ZonedDateTime,
}

enum CustomerType {
	PERSON, COMPANY
}

enum ContactType {
	FAX, PHONE, CELLPHONE, EMAIL, SITE
}

enum TaskStatus {
    CREATED, RUNNING, ENDED, SUSPENDED
}

enum TaskType {
	PLANNED, UNEXPECTED, REPETITIVE
}

enum TaskPriority {
  LOW, MEDIUM, HIGH, VERY_HIGH
}

enum DayOffType {
	HOLIDAY, SICKNESS, LICENSE
}

enum RestWorkDaysStatus {
	PLANNED, WAITING, APPROVED, REJECTED
}

relationship OneToMany {
	Contact{contacts} to Customer
}

relationship OneToMany {
	Contact{contacts} to Vendor
}


relationship OneToMany {
	Location{locations} to Customer
}

relationship OneToMany {
	Location{locations} to Vendor
}


relationship OneToMany {
	Task{tasks} to Job
}

relationship OneToMany {
	Employee{employeesToJob} to Job
}


relationship OneToMany {
	Employee{employeesToJobHistory} to JobHistory
}

relationship OneToMany {
	Customer{customerToJobHistory} to JobHistory
}


relationship OneToMany {
	RestWorkDays {restEmployee} to Employee  
}

relationship OneToMany {
	RestWorkDays {workDayOff} to DayOff
}

dto Employee, Task, Job, Customer, JobHistory with mapstruct 

service Employee, Task, Job, Customer, JobHistory with serviceClass