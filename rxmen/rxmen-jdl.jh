entity Customer {
	custumerId Long,
    name String,
    description String,
}

entity Location {
	locationId Long,
	streetAddress String,
	postalCode String,
	city String,
	stateProvince String,
    regionName String,
    countryName String,
}


/**
 * The Employee entity.
 */
entity Employee {
	employeeId Long,
	firstName String,
	lastName String,
	email String,
	phoneNumber String,
	hireDate ZonedDateTime,
}

entity RestWorkDays {
	restWorkDaysStatus RestWorkDaysStatus,
    description String,
}

entity DayOff {
	dayId Long,
    dayOffType DayOffType,
    description String,
    startDate ZonedDateTime,
    endDate ZonedDateTime,
}


entity Job {
	description String,
}

entity Task {
	taskId Long,
	title String,
	description String,
    taskDate ZonedDateTime,
    taskStatus TaskStatus,
    taskPriority TaskPriority,
    taskType TaskType,
}


entity JobHistory {
	startDate ZonedDateTime,
	endDate ZonedDateTime,
}

enum TaskStatus {
    CREATED, RUNNING, ENDED, SUSPENDED
}

enum TaskType {
	PLANNED, UNEXPECTED, REPETITIVE
}

enum TaskPriority {
  LOW, MEDIUM, HIGH, VERY_HIGH
}

enum DayOffType {
	HOLIDAY, SICKNESS, LICENSE
}

enum RestWorkDaysStatus {
	PLANNED, WAITING, APPROVED, REJECTED
}


relationship OneToMany {
	Customer{locations} to Location
}


relationship OneToMany {
	Task{tasks} to Job
}

relationship OneToMany {
	Employee{employeesToJob} to Job
}


relationship OneToMany {
	Employee{employeesToJobHistory} to JobHistory
}

relationship OneToMany {
	JobHistory{customer} to Customer
}


relationship OneToMany {
	Employee{restEmployee} to RestWorkDays 
}

relationship OneToMany {
	DayOff{workDayOff} to RestWorkDays
}

dto Employee, Task, Customer with mapstruct

service Employee, Task, Job, Customer with serviceClass

	